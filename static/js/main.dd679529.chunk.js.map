{"version":3,"sources":["config/config.js","store/reducers/postCodes-reducer.js","store/actions/action-type.js","store/reducers/dashboard-reducer.js","store/reducers/index.js","store/store.js","store/services/ipf-Service.js","store/actions/postcodes-actions.js","store/actions/dashboard-actions.js","components/Autocomplete/Autocomplete.js","components/AddInput/AddInput.js","components/Header/Header.js","utils/Utils.js","components/MapDiv/MapDiv.js","components/PostcodesDetails/PostcodesDetails.js","components/Postcodes/Postcodes.js","pages/PostcodesPage/PostcodesPage.js","pages/ErrorPage/ErrorPage.js","pages/PageNotFoundPage/PageNotFoundPage.js","PublicRoutes.js","HOC/CheckRequests.js","components/Banner/Banner.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","apiBaseUrl","process","initialState","postCodesData","loading","error","postCodeDetilas","postCodesReducers","state","arguments","length","undefined","action","type","Object","objectSpread","data","drawerOpen","dashboardReducers","combineReducers","postCodes","dashboard","dashboardReducer","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","logger","store","createStore","rootReducer","ipfService","get","apiEndpoint","axios","config","options","Content-Type","getOptions","then","response","catch","err","postCodesRequest","postCodesSuccess","results","result","postCodesError","postCodesDetailsRequest","postCodesDetailsSuccess","postCodesDetailsError","drawerOpenClick","dispatch","drawerOpenStatus","Autocomplete","useDispatch","_useState","useState","_useState2","slicedToArray","activeSuggestion","setActiveSuggestion","_useState3","_useState4","filteredSuggestions","setFlteredSuggestions","_useState5","_useState6","suggestions","setSuggestions","_useState7","_useState8","showSuggestions","setShowSuggestions","_useState9","_useState10","userInput","setUserInput","useSelector","useEffect","suggestionsListComponent","onClick","e","postcode","currentTarget","innerText","searchQuery","concat","react_default","a","createElement","className","map","suggestion","index","key","data-testid","react","onChange","search","value","trim","placeholder","AddInput","components_Autocomplete_Autocomplete","Header","_ref","title","Fragment","kmInDegree","lat","long","pi","Math","PI","eSq","pow","sin","cos","sqrt","MapDiv","prors","newCenter","setNewCenter","zoom","setzoom","center","index_esm","defaultCenter","width","height","defaultWidth","anchor","PostcodesDetails","postCodeInfo","setpostCodeInfo","_useSelector","drawerOpenFlag","postCodeDetails","formatOutput","num","parseInt","round","divFlag","d","latitude","south","north","box","dist","east","west","getBox","longitude","fallback","Collapse","in","country","region","admin_district","parliamentary_constituency","components_MapDiv_MapDiv","Postcodes","todos","setTodos","components_Header_Header","components_AddInput_AddInput","components_PostcodesDetails_PostcodesDetails","PostcodesPage","Container","components_Postcodes_Postcodes","ErrorPage","pageImage","faTriangleExclamation","index_es","icon","style","color","react_router_dom","to","PageNotFoundPage","faFaceFrown","CheckRequests","Wrapped","props","navigate","useNavigate","interceptors","use","console","log","status","Promise","reject","react_router","strict","exact","path","element","ErrorPage_ErrorPage","pages_PageNotFoundPage_PageNotFoundPage","Banner","App","react_redux_es","Banner_Banner","src_PublicRoutes","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.dd679529.chunk.js","sourcesContent":["module.exports = {\r\n    apiBaseUrl: process.env.REACT_APP_POSTCODE_BASE_URL\r\n  };\r\n  ","import {\r\n    POSTCODES_SEARCH_REQUEST,\r\n    POSTCODES_SEARCH_SUCCESS,\r\n    POSTCODES_SEARCH_ERROR,\r\n    POSTCODES_DETAILS_REQUEST,\r\n    POSTCODES_DETAILS_SUCCESS,\r\n    POSTCODES_DETAILS_ERROR\r\n} from \"../actions/action-type\";\r\n\r\nconst initialState = {    \r\n    postCodesData: [],\r\n    loading: false,\r\n    error: null,\r\n    postCodeDetilas: {}\r\n};\r\n\r\nconst postCodesReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case POSTCODES_SEARCH_REQUEST:\r\n          return {\r\n            ...state,\r\n            loading: true,\r\n            error: null\r\n          };\r\n        case POSTCODES_SEARCH_SUCCESS:\r\n          return {\r\n            ...state,\r\n            loading: false,\r\n            postCodesData: action.data\r\n          };\r\n    \r\n        case POSTCODES_SEARCH_ERROR:\r\n          return {\r\n            ...state,\r\n            loading: false,          \r\n            error: action.error,\r\n            postCodesData:[]\r\n          };    \r\n        case POSTCODES_DETAILS_REQUEST:\r\n            return {\r\n              ...state,\r\n              loading: true,\r\n              error: null\r\n            };\r\n        case POSTCODES_DETAILS_SUCCESS:\r\n            return {\r\n              ...state,\r\n              loading: false,\r\n              postCodeDetilas: action.data\r\n            };\r\n      \r\n        case POSTCODES_DETAILS_ERROR:\r\n            return {\r\n              ...state,\r\n              loading: false,          \r\n              error: action.error,\r\n              postCodeDetilas: {}\r\n            };   \r\n        default:\r\n          return state;\r\n      }\r\n    };\r\n    \r\n  export default postCodesReducers;\r\n\r\n","export const POSTCODES_SEARCH_REQUEST = \"POSTCODES_SEARCH_REQUEST\";\r\nexport const POSTCODES_SEARCH_SUCCESS = \"POSTCODES_SEARCH_SUCCESS\";\r\nexport const POSTCODES_SEARCH_ERROR = \"POSTCODES_SEARCH_ERROR\";\r\nexport const POSTCODES_DETAILS_REQUEST = \"POSTCODES_DETAILS_REQUEST\";\r\nexport const POSTCODES_DETAILS_SUCCESS = \"POSTCODES_DETAILS_SUCCESS\";\r\nexport const POSTCODES_DETAILS_ERROR = \"POSTCODES_DETAILS_ERROR\";\r\nexport const DASHBOARD_DRAWER_OPEN = \"DASHBOARD_DRAWER_OPEN\";","import { DASHBOARD_DRAWER_OPEN } from \"../actions/action-type\";\r\n\r\nconst initialState = {\r\n  drawerOpen: false\r\n};\r\n\r\nconst dashboardReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DASHBOARD_DRAWER_OPEN:\r\n      return {\r\n        ...state,\r\n        drawerOpen: action.drawerOpen\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dashboardReducers;\r\n","import { combineReducers } from \"redux\";\r\nimport postCodesReducers from \"./postCodes-reducer\";\r\nimport dashboardReducer from \"./dashboard-reducer\";\r\n\r\nexport default combineReducers({\r\n    postCodes: postCodesReducers,\r\n    dashboard: dashboardReducer,\r\n  });","import thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { compose, applyMiddleware,createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n/**\r\n * composeEnhancers redux devtools kullanırken\r\n */\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk),\r\n  applyMiddleware(logger)\r\n);\r\nconst store = createStore(rootReducer, enhancer);\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport config from \"../../config/config\";\r\nexport const ipfService = {\r\n  get\r\n};\r\n\r\nfunction get(apiEndpoint) {\r\n  return axios\r\n    .get(config.apiBaseUrl + apiEndpoint, getOptions())\r\n    .then((response) => {\r\n      return response;\r\n    }).catch((err) => {\r\n      return err;\r\n    });\r\n}\r\n\r\nfunction getOptions() {\r\n  let options = {};\r\n  options.headers = {\r\n    \"Content-Type\": \"application/json\"\r\n  };\r\n  return options;\r\n}","import {\r\n    POSTCODES_SEARCH_REQUEST,\r\n    POSTCODES_SEARCH_SUCCESS,\r\n    POSTCODES_SEARCH_ERROR,\r\n    POSTCODES_DETAILS_REQUEST,\r\n    POSTCODES_DETAILS_SUCCESS,\r\n    POSTCODES_DETAILS_ERROR\r\n\r\n  } from \"./action-type\";\r\n  import { ipfService } from \"../services\";\r\n  \r\n  export const getPostCodesData = (search) => {\r\n    \r\n    return (dispatch) => {\r\n      dispatch(postCodesRequest());     \r\n      let searchQuery = `''`;\r\n      if(search !== \"\") {\r\n        searchQuery = search;\r\n      }\r\n     \r\n        let apiEndpoint = `postcodes/${searchQuery}/autocomplete?limit=10000`;\r\n    \r\n        ipfService\r\n            .get(apiEndpoint)\r\n            .then((response) => {           \r\n                 dispatch(postCodesSuccess(response));\r\n            \r\n            })\r\n            .catch((err) => {            \r\n                dispatch(postCodesError(err));\r\n            });\r\n        \r\n       \r\n    };\r\n  };\r\n\r\n  export const postCodesRequest = () => {\r\n    return {\r\n      type: POSTCODES_SEARCH_REQUEST,\r\n    };\r\n  };\r\n  \r\n  export const postCodesSuccess = (results) => {\r\n    return {\r\n      type: POSTCODES_SEARCH_SUCCESS,\r\n      data: results.data.result\r\n    };\r\n  };\r\n  \r\n  export const postCodesError = (error) => {\r\n    return {\r\n      type: POSTCODES_SEARCH_ERROR,  \r\n      error: \"\",\r\n    };\r\n  };\r\n\r\n\r\n  export const getPostCodesDetailsData = (postcode) => {\r\n    \r\n    return (dispatch) => {\r\n      dispatch(postCodesDetailsRequest());     \r\n      let searchQuery = `''`;\r\n      if(postcode !== \"\") {\r\n        searchQuery = postcode;\r\n      }\r\n     \r\n        let apiEndpoint = `postcodes/${searchQuery}`;\r\n    \r\n        ipfService\r\n            .get(apiEndpoint)\r\n            .then((response) => {           \r\n                dispatch(postCodesDetailsSuccess(response));\r\n            })\r\n            .catch((err) => {            \r\n                dispatch(postCodesDetailsError(err));\r\n            });\r\n        \r\n       \r\n    };\r\n  };\r\n\r\n  export const postCodesDetailsRequest = () => {\r\n    return {\r\n      type: POSTCODES_DETAILS_REQUEST,\r\n    };\r\n  };\r\n  \r\n  export const postCodesDetailsSuccess = (results) => {\r\n    return {\r\n      type: POSTCODES_DETAILS_SUCCESS,\r\n      data: results.data.result\r\n    };\r\n  };\r\n  \r\n  export const postCodesDetailsError = (error) => {\r\n    return {\r\n      type: POSTCODES_DETAILS_ERROR,  \r\n      error: \"\",\r\n    };\r\n  };\r\n\r\n","import { DASHBOARD_DRAWER_OPEN } from \"./action-type\";\r\n\r\nexport const drawerOpenStatus = drawerOpen => {\r\n  const type = DASHBOARD_DRAWER_OPEN;\r\n  return { type, drawerOpen };\r\n};\r\n\r\nexport const drawerOpenClick = drawerOpen => {\r\n  return dispatch => {\r\n    dispatch(drawerOpenStatus(drawerOpen));\r\n  };\r\n};","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Autocomplete.css\";\r\nimport { getPostCodesData, getPostCodesDetailsData, drawerOpenClick } from \"../../store/actions\";\r\n\r\n\r\nconst Autocomplete = () => {    \r\n    const dispatch = useDispatch();\r\n    const [activeSuggestion, setActiveSuggestion] = useState(0);\r\n    const [filteredSuggestions, setFlteredSuggestions] = useState([]);\r\n    const [suggestions, setSuggestions] = useState([]);\r\n    const [showSuggestions, setShowSuggestions] = useState(true);\r\n    const [userInput, setUserInput] = useState(\"\");\r\n\r\n    const { postCodesData} = useSelector((state) => ({      \r\n      postCodesData: state.postCodes.postCodesData\r\n      \r\n    }));\r\n\r\n    \r\n    useEffect(() => {\r\n     \r\n      if(postCodesData){\r\n        \r\n        setSuggestions(postCodesData);\r\n        setFlteredSuggestions(postCodesData);\r\n      }\r\n    }, [postCodesData]);\r\n   \r\n\r\n   const onChange = e => {    \r\n    const userInput = e.currentTarget.value.trim();\r\n    if(userInput !== \"\"){\r\n       dispatch(getPostCodesData(userInput))  \r\n        setActiveSuggestion(0);\r\n        dispatch(drawerOpenClick(false))\r\n        setShowSuggestions(true);\r\n        \r\n    }\r\n    setUserInput(e.currentTarget.value);\r\n};\r\n\r\nconst onClick = e => {\r\n    setActiveSuggestion(0);\r\n    setFlteredSuggestions([]);\r\n    setShowSuggestions(false);    \r\n    dispatch(drawerOpenClick(true))\r\n    dispatch(getPostCodesDetailsData(e.currentTarget.innerText));\r\n    setUserInput(e.currentTarget.innerText);    \r\n};\r\n\r\n\r\nlet suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length && suggestions.length) {\r\n        suggestionsListComponent = (\r\n          <ul className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n\r\n              return (\r\n                <li className={className} key={suggestion} data-testid={`suggestion-active-${index}`} onClick={onClick}>\r\n                  {suggestion}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions, you're on your own!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n   \r\n   return (\r\n    <Fragment>  \r\n    <input\r\n    type=\"text\"\r\n    onChange={onChange}    \r\n    value={userInput}\r\n    placeholder=\"Enter postcode here...\"\r\n    />\r\n    {suggestionsListComponent}\r\n</Fragment>\r\n   );\r\n\r\n}\r\n\r\n\r\n\r\n  export default Autocomplete;","import React from 'react'\r\nimport \"./AddInput.css\"\r\nimport Autocomplete from \"../Autocomplete/Autocomplete\";\r\nimport \"../Autocomplete/Autocomplete.css\"\r\n\r\nexport const AddInput =() => {\r\n    return (\r\n        <div className=\"input-container\">\r\n            <Autocomplete/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddInput","import React from 'react';\r\nimport \"./Header.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = ({\r\n    title\r\n}) => {\r\n    return (\r\n        <>\r\n            <h1 title=\"Header\" className=\"header\">{title}</h1>\r\n        </>\r\n    )\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n  }\r\n\r\nexport default Header;","export const getBox =(lat, long) => {\r\n    //calculate the offset of 1km at a certain coordinate\r\n    const dist = kmInDegree(lat, long)\r\n    //calculate the bounds and make an object of them\r\n    let bounds = {\r\n      north: lat + dist.lat,\r\n      south: lat - dist.lat,\r\n      east: long + dist.long,\r\n      west: long - dist.long\r\n    };\r\n    return bounds;\r\n  }\r\n  \r\n  //See https://en.wikipedia.org/wiki/Latitude#Length_of_a_degree_of_latitude\r\n  export const kmInDegree = (lat, long) => {\r\n    const pi = Math.PI;\r\n    const eSq = 0.00669437999014;\r\n    const a = 6378137.0; //equatorial radius in metres\r\n    lat = lat * pi / 180; //convert to radians\r\n    long = long * pi / 180; //convert radians\r\n  \r\n    //I won't try to explain the calculations. All i know is that they are correct with the examples on wikipedia (see url above)\r\n    const latLength = (pi * a * (1 - eSq)) / (180 * Math.pow((1 - eSq * Math.pow(Math.sin(lat), 2)), 3 / 2));\r\n  \r\n    const longLength = (pi * a * Math.cos(long)) / (180 * Math.sqrt((1 - (eSq * Math.pow(Math.sin(long), 2)))));\r\n  \r\n    //If you want a greater offset, say 5km then change 1000 into 5000\r\n    return {\r\n      lat: 1000 / latLength,\r\n      long: 1000 / longLength\r\n    };\r\n  }","import React, {useEffect, useState} from \"react\"\r\nimport { Map, Marker } from \"pigeon-maps\";\r\n\r\nconst MapDiv = (prors) =>{\r\n    \r\n    const [newCenter, setNewCenter] = useState([]);\r\n    const [zoom, setzoom] = useState(12);\r\n    useEffect(()=>{\r\n        setNewCenter(prors.center);\r\n        setzoom(15);\r\n    },[prors.center])\r\n    return(\r\n        <>\r\n        <Map center={newCenter}\r\n             defaultCenter={[51.509865, -0.118092]}\r\n             zoom={zoom}\r\n             width={500}\r\n             height={250}>\r\n            <Marker  defaultWidth={50} anchor={newCenter}  />\r\n        </Map>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nexport default MapDiv;","import React,{useEffect, useState, Suspense} from 'react'\r\nimport \"./PostcodesDetails.css\"\r\nimport { useSelector } from \"react-redux\";\r\nimport Collapse from 'react-bootstrap/Collapse';\r\nimport {getBox} from \"../../utils/Utils\"\r\nimport MapDiv from \"../MapDiv/MapDiv\";\r\n\r\n\r\n\r\nconst PostcodesDetails = () => {   \r\n    const [postCodeInfo, setpostCodeInfo] = useState({});    \r\n    const { drawerOpenFlag, postCodeDetails, loading  } = useSelector((state) => ({\r\n        drawerOpenFlag: state.dashboard.drawerOpen,       \r\n        postCodeDetails: state.postCodes.postCodeDetilas,\r\n        loading: state.postCodes.loading\r\n      }));\r\n\r\n    const formatOutput =(num) =>{\r\n          if (num > 10) \r\n              return parseInt(num);\r\n          return Math.round(num*100)/100;\r\n    }\r\n\r\n    let divFlag = drawerOpenFlag;\r\n    let c = 24902.0; // earth circumference in miles\r\n\tlet d = Math.cos( postCodeInfo.latitude*Math.PI/180.0 )*c/360.0;\r\n    let south = formatOutput(1.609344*d) + \" kilometers\"\r\n    let north = formatOutput(d) + \" miles\";\r\n    let box = getBox(postCodeInfo.latitude, postCodeInfo.longitude)\r\n\r\n    let center = [postCodeInfo.latitude, postCodeInfo.longitude]\r\n    \r\n    useEffect(()=>{\r\n        \r\n        setpostCodeInfo(postCodeDetails)\r\n    },[postCodeDetails])\r\n\r\n    \r\n    \r\n    return (\r\n       <>\r\n       <Suspense fallback={loading && <h1>Loading content...</h1>}>\r\n       \r\n         {divFlag &&\r\n         <Collapse in={divFlag}>\r\n        <div className=\"todolist-container\">            \r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 col-md-offset-3\">\r\n                    <div className=\"postcode-container\">\r\n                    <div className=\"container \">\r\n                            <div className=\"row font-weight-bold py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                    Country\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {postCodeInfo.country}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"row py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                    Region\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {postCodeInfo.region}\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"row py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                    Admin District\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {postCodeInfo.admin_district}\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"row py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                    Parliamentary Constituency\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {postCodeInfo.parliamentary_constituency}\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"row py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                        South\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {`${box.south} / ${south}`}\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div className=\"row py-2\">\r\n                                <div className=\"col todo-item-active\">\r\n                                        North\r\n                                </div>\r\n                                <div className=\"col todo-item-active\">\r\n                                    {`${box.north} / ${north}`}\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            \r\n                        </div>       \r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-6 col-md-offset-3\">\r\n                \r\n                    <div className=\"map-container\">\r\n                        <MapDiv center={center}/>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n        </Collapse>\r\n        }\r\n        </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostcodesDetails","import React, { useState } from 'react'\r\nimport AddInput from '../AddInput/AddInput'\r\nimport Header from '../Header/Header'\r\nimport PostcodesDetails from '../PostcodesDetails/PostcodesDetails';\r\nimport \"./Postcodes.css\"\r\n\r\nfunction Postcodes() {\r\n\r\n    const [todos, setTodos] = useState([])\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <Header title=\"Postcode Search\" />\r\n            <AddInput \r\n                setTodos={setTodos}\r\n                todos={todos}\r\n            />\r\n            <PostcodesDetails/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Postcodes","import React from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport Postcodes from \"../../components/Postcodes/Postcodes\"\r\n\r\nexport default function PostcodesPage() {\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Postcodes />\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTriangleExclamation } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'react-router-dom';\r\nimport Header from \"../../components/Header/Header\";\r\nimport \"./ErrorPage.css\";\r\n\r\n\r\n\r\nexport default function ErrorPage() {\r\n    let title =  \"Something went wrong\";\r\n    let contentText = \"Something went wrong\" \r\n    let pageImage = faTriangleExclamation; \r\n    return (\r\n        <div>\r\n            <Container>\r\n            <div className='page-content'>\r\n            <Header title={title} />\r\n            <div className=\"pagecontent-container\">\r\n                \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className='pagecontent-div'> \r\n                            <div>\r\n                                <h2>{contentText}</h2>\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={pageImage} \r\n                                style={{ color: 'grey', height:'200px' }}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"pagecontent-footer\">\r\n                    <Link to=\"/postcodesearch/\">Go Back</Link>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFaceFrown } from '@fortawesome/free-solid-svg-icons';\r\nimport Header from \"../../components/Header/Header\";\r\nimport \"./PageNotFoundPage.css\";\r\n\r\nconst PageNotFoundPage = () => {\r\n    let title = \"Page Not Found\";   \r\n    let contentText = \"The page you looking for dosen't exist.\";\r\n    let pageImage = faFaceFrown; \r\n    return (\r\n        <div>\r\n            <Container>\r\n            <div className='page-content'>\r\n            <Header title={title} />\r\n            <div className=\"pagecontent-container\">\r\n                \r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div className='pagecontent-div'> \r\n                            <div>\r\n                                <h2>{contentText}</h2>\r\n                            </div>\r\n                            <div>\r\n                                <FontAwesomeIcon icon={pageImage} \r\n                                style={{ color: 'grey', height:'200px' }}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"pagecontent-footer\">\r\n                    <Link to=\"/postcodesearch/\">Go Back</Link>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PageNotFoundPage;","import React from 'react';\r\nimport {    \r\n    Routes,\r\n    Route, \r\n  } from \"react-router-dom\";\r\nimport PostcodesPage from './pages/PostcodesPage/PostcodesPage';\r\nimport ErrorPage from './pages/ErrorPage/ErrorPage';\r\nimport PageNotFoundPage from './pages/PageNotFoundPage/PageNotFoundPage';\r\nimport CheckRequests from \"./HOC/CheckRequests\";\r\n\r\nconst PublicRoutes = () => (\r\n    <Routes>\r\n          <Route strict exact path='/postcodesearch'element={<PostcodesPage/>}/>\r\n          <Route strict exact path=\"/\" element={<PostcodesPage/>}/>  \r\n          <Route strict exact path=\"/error-page\" element={<ErrorPage/>}/> \r\n          <Route path=\"*\" element={<PageNotFoundPage/>}/> \r\n    </Routes> \r\n);\r\n\r\nexport default CheckRequests(PublicRoutes);\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nconst CheckRequests= Wrapped => {\r\n    \r\n    function CheckRequests(props) {\r\n        \r\n        const navigate = useNavigate();\r\n        useEffect(()=>{\r\n            axios.interceptors.response.use(function (response) {\r\n                return response;\r\n            }, function (error) {\r\n                console.log(error);                        \r\n                        switch (error.response.status) {\r\n                            case 400 :\r\n                                navigate('/error-page');\r\n                                break\r\n                            case 401 :           \r\n                                 navigate('/error-page');\r\n                            break\r\n                            case 404 :\r\n                                navigate('/error-page');\r\n                            break\r\n                            case 500 :\r\n                                navigate('/error-page');\r\n                            break\r\n                            case 503 :\r\n                                navigate('/error-page');\r\n                                break\r\n                            default :                            \r\n                                break\r\n                        }\r\n                \r\n                // Do something with response error\r\n                return Promise.reject(error);\r\n            });\r\n        })\r\n\r\n        return (\r\n            <Wrapped {...props} />\r\n        )\r\n    }\r\n    return CheckRequests\r\n}\r\n\r\nexport default CheckRequests","import React from 'react';\r\nimport \"./Banner.css\";\r\n\r\nexport default function Banner() {\r\n    return (\r\n        <div className=\"banner\" />\r\n    )\r\n}","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport PublicRoutes from \"./PublicRoutes\";\nimport Banner from './components/Banner/Banner';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n      <Banner />\n      <BrowserRouter>\n        <PublicRoutes/>\n      </BrowserRouter>\n    </div>\n  </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst container = document.getElementById('root') || document.createElement('div');\nconst root = ReactDOM.createRoot(container);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}